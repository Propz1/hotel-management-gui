import {
  __commonJS
} from "./chunk-CF3WPAMV.js";

// node_modules/dayjs/dayjs.min.js
var require_dayjs_min = __commonJS({
  "node_modules/dayjs/dayjs.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).dayjs = e();
    }(exports, function() {
      "use strict";
      var t = 1e3, e = 6e4, n = 36e5, r = "millisecond", i = "second", s = "minute", u = "hour", a = "day", o = "week", c = "month", f = "quarter", h = "year", d = "date", l = "Invalid Date", $ = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(t2) {
        var e2 = ["th", "st", "nd", "rd"], n2 = t2 % 100;
        return "[" + t2 + (e2[(n2 - 20) % 10] || e2[n2] || e2[0]) + "]";
      } }, m = function(t2, e2, n2) {
        var r2 = String(t2);
        return !r2 || r2.length >= e2 ? t2 : "" + Array(e2 + 1 - r2.length).join(n2) + t2;
      }, v = { s: m, z: function(t2) {
        var e2 = -t2.utcOffset(), n2 = Math.abs(e2), r2 = Math.floor(n2 / 60), i2 = n2 % 60;
        return (e2 <= 0 ? "+" : "-") + m(r2, 2, "0") + ":" + m(i2, 2, "0");
      }, m: function t2(e2, n2) {
        if (e2.date() < n2.date())
          return -t2(n2, e2);
        var r2 = 12 * (n2.year() - e2.year()) + (n2.month() - e2.month()), i2 = e2.clone().add(r2, c), s2 = n2 - i2 < 0, u2 = e2.clone().add(r2 + (s2 ? -1 : 1), c);
        return +(-(r2 + (n2 - i2) / (s2 ? i2 - u2 : u2 - i2)) || 0);
      }, a: function(t2) {
        return t2 < 0 ? Math.ceil(t2) || 0 : Math.floor(t2);
      }, p: function(t2) {
        return { M: c, y: h, w: o, d: a, D: d, h: u, m: s, s: i, ms: r, Q: f }[t2] || String(t2 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t2) {
        return void 0 === t2;
      } }, g = "en", D = {};
      D[g] = M;
      var p = "$isDayjsObject", S = function(t2) {
        return t2 instanceof _ || !(!t2 || !t2[p]);
      }, w = function t2(e2, n2, r2) {
        var i2;
        if (!e2)
          return g;
        if ("string" == typeof e2) {
          var s2 = e2.toLowerCase();
          D[s2] && (i2 = s2), n2 && (D[s2] = n2, i2 = s2);
          var u2 = e2.split("-");
          if (!i2 && u2.length > 1)
            return t2(u2[0]);
        } else {
          var a2 = e2.name;
          D[a2] = e2, i2 = a2;
        }
        return !r2 && i2 && (g = i2), i2 || !r2 && g;
      }, O = function(t2, e2) {
        if (S(t2))
          return t2.clone();
        var n2 = "object" == typeof e2 ? e2 : {};
        return n2.date = t2, n2.args = arguments, new _(n2);
      }, b = v;
      b.l = w, b.i = S, b.w = function(t2, e2) {
        return O(t2, { locale: e2.$L, utc: e2.$u, x: e2.$x, $offset: e2.$offset });
      };
      var _ = function() {
        function M2(t2) {
          this.$L = w(t2.locale, null, true), this.parse(t2), this.$x = this.$x || t2.x || {}, this[p] = true;
        }
        var m2 = M2.prototype;
        return m2.parse = function(t2) {
          this.$d = function(t3) {
            var e2 = t3.date, n2 = t3.utc;
            if (null === e2)
              return /* @__PURE__ */ new Date(NaN);
            if (b.u(e2))
              return /* @__PURE__ */ new Date();
            if (e2 instanceof Date)
              return new Date(e2);
            if ("string" == typeof e2 && !/Z$/i.test(e2)) {
              var r2 = e2.match($);
              if (r2) {
                var i2 = r2[2] - 1 || 0, s2 = (r2[7] || "0").substring(0, 3);
                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2);
              }
            }
            return new Date(e2);
          }(t2), this.init();
        }, m2.init = function() {
          var t2 = this.$d;
          this.$y = t2.getFullYear(), this.$M = t2.getMonth(), this.$D = t2.getDate(), this.$W = t2.getDay(), this.$H = t2.getHours(), this.$m = t2.getMinutes(), this.$s = t2.getSeconds(), this.$ms = t2.getMilliseconds();
        }, m2.$utils = function() {
          return b;
        }, m2.isValid = function() {
          return !(this.$d.toString() === l);
        }, m2.isSame = function(t2, e2) {
          var n2 = O(t2);
          return this.startOf(e2) <= n2 && n2 <= this.endOf(e2);
        }, m2.isAfter = function(t2, e2) {
          return O(t2) < this.startOf(e2);
        }, m2.isBefore = function(t2, e2) {
          return this.endOf(e2) < O(t2);
        }, m2.$g = function(t2, e2, n2) {
          return b.u(t2) ? this[e2] : this.set(n2, t2);
        }, m2.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m2.valueOf = function() {
          return this.$d.getTime();
        }, m2.startOf = function(t2, e2) {
          var n2 = this, r2 = !!b.u(e2) || e2, f2 = b.p(t2), l2 = function(t3, e3) {
            var i2 = b.w(n2.$u ? Date.UTC(n2.$y, e3, t3) : new Date(n2.$y, e3, t3), n2);
            return r2 ? i2 : i2.endOf(a);
          }, $2 = function(t3, e3) {
            return b.w(n2.toDate()[t3].apply(n2.toDate("s"), (r2 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e3)), n2);
          }, y2 = this.$W, M3 = this.$M, m3 = this.$D, v2 = "set" + (this.$u ? "UTC" : "");
          switch (f2) {
            case h:
              return r2 ? l2(1, 0) : l2(31, 11);
            case c:
              return r2 ? l2(1, M3) : l2(0, M3 + 1);
            case o:
              var g2 = this.$locale().weekStart || 0, D2 = (y2 < g2 ? y2 + 7 : y2) - g2;
              return l2(r2 ? m3 - D2 : m3 + (6 - D2), M3);
            case a:
            case d:
              return $2(v2 + "Hours", 0);
            case u:
              return $2(v2 + "Minutes", 1);
            case s:
              return $2(v2 + "Seconds", 2);
            case i:
              return $2(v2 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m2.endOf = function(t2) {
          return this.startOf(t2, false);
        }, m2.$set = function(t2, e2) {
          var n2, o2 = b.p(t2), f2 = "set" + (this.$u ? "UTC" : ""), l2 = (n2 = {}, n2[a] = f2 + "Date", n2[d] = f2 + "Date", n2[c] = f2 + "Month", n2[h] = f2 + "FullYear", n2[u] = f2 + "Hours", n2[s] = f2 + "Minutes", n2[i] = f2 + "Seconds", n2[r] = f2 + "Milliseconds", n2)[o2], $2 = o2 === a ? this.$D + (e2 - this.$W) : e2;
          if (o2 === c || o2 === h) {
            var y2 = this.clone().set(d, 1);
            y2.$d[l2]($2), y2.init(), this.$d = y2.set(d, Math.min(this.$D, y2.daysInMonth())).$d;
          } else
            l2 && this.$d[l2]($2);
          return this.init(), this;
        }, m2.set = function(t2, e2) {
          return this.clone().$set(t2, e2);
        }, m2.get = function(t2) {
          return this[b.p(t2)]();
        }, m2.add = function(r2, f2) {
          var d2, l2 = this;
          r2 = Number(r2);
          var $2 = b.p(f2), y2 = function(t2) {
            var e2 = O(l2);
            return b.w(e2.date(e2.date() + Math.round(t2 * r2)), l2);
          };
          if ($2 === c)
            return this.set(c, this.$M + r2);
          if ($2 === h)
            return this.set(h, this.$y + r2);
          if ($2 === a)
            return y2(1);
          if ($2 === o)
            return y2(7);
          var M3 = (d2 = {}, d2[s] = e, d2[u] = n, d2[i] = t, d2)[$2] || 1, m3 = this.$d.getTime() + r2 * M3;
          return b.w(m3, this);
        }, m2.subtract = function(t2, e2) {
          return this.add(-1 * t2, e2);
        }, m2.format = function(t2) {
          var e2 = this, n2 = this.$locale();
          if (!this.isValid())
            return n2.invalidDate || l;
          var r2 = t2 || "YYYY-MM-DDTHH:mm:ssZ", i2 = b.z(this), s2 = this.$H, u2 = this.$m, a2 = this.$M, o2 = n2.weekdays, c2 = n2.months, f2 = n2.meridiem, h2 = function(t3, n3, i3, s3) {
            return t3 && (t3[n3] || t3(e2, r2)) || i3[n3].slice(0, s3);
          }, d2 = function(t3) {
            return b.s(s2 % 12 || 12, t3, "0");
          }, $2 = f2 || function(t3, e3, n3) {
            var r3 = t3 < 12 ? "AM" : "PM";
            return n3 ? r3.toLowerCase() : r3;
          };
          return r2.replace(y, function(t3, r3) {
            return r3 || function(t4) {
              switch (t4) {
                case "YY":
                  return String(e2.$y).slice(-2);
                case "YYYY":
                  return b.s(e2.$y, 4, "0");
                case "M":
                  return a2 + 1;
                case "MM":
                  return b.s(a2 + 1, 2, "0");
                case "MMM":
                  return h2(n2.monthsShort, a2, c2, 3);
                case "MMMM":
                  return h2(c2, a2);
                case "D":
                  return e2.$D;
                case "DD":
                  return b.s(e2.$D, 2, "0");
                case "d":
                  return String(e2.$W);
                case "dd":
                  return h2(n2.weekdaysMin, e2.$W, o2, 2);
                case "ddd":
                  return h2(n2.weekdaysShort, e2.$W, o2, 3);
                case "dddd":
                  return o2[e2.$W];
                case "H":
                  return String(s2);
                case "HH":
                  return b.s(s2, 2, "0");
                case "h":
                  return d2(1);
                case "hh":
                  return d2(2);
                case "a":
                  return $2(s2, u2, true);
                case "A":
                  return $2(s2, u2, false);
                case "m":
                  return String(u2);
                case "mm":
                  return b.s(u2, 2, "0");
                case "s":
                  return String(e2.$s);
                case "ss":
                  return b.s(e2.$s, 2, "0");
                case "SSS":
                  return b.s(e2.$ms, 3, "0");
                case "Z":
                  return i2;
              }
              return null;
            }(t3) || i2.replace(":", "");
          });
        }, m2.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m2.diff = function(r2, d2, l2) {
          var $2, y2 = this, M3 = b.p(d2), m3 = O(r2), v2 = (m3.utcOffset() - this.utcOffset()) * e, g2 = this - m3, D2 = function() {
            return b.m(y2, m3);
          };
          switch (M3) {
            case h:
              $2 = D2() / 12;
              break;
            case c:
              $2 = D2();
              break;
            case f:
              $2 = D2() / 3;
              break;
            case o:
              $2 = (g2 - v2) / 6048e5;
              break;
            case a:
              $2 = (g2 - v2) / 864e5;
              break;
            case u:
              $2 = g2 / n;
              break;
            case s:
              $2 = g2 / e;
              break;
            case i:
              $2 = g2 / t;
              break;
            default:
              $2 = g2;
          }
          return l2 ? $2 : b.a($2);
        }, m2.daysInMonth = function() {
          return this.endOf(c).$D;
        }, m2.$locale = function() {
          return D[this.$L];
        }, m2.locale = function(t2, e2) {
          if (!t2)
            return this.$L;
          var n2 = this.clone(), r2 = w(t2, e2, true);
          return r2 && (n2.$L = r2), n2;
        }, m2.clone = function() {
          return b.w(this.$d, this);
        }, m2.toDate = function() {
          return new Date(this.valueOf());
        }, m2.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m2.toISOString = function() {
          return this.$d.toISOString();
        }, m2.toString = function() {
          return this.$d.toUTCString();
        }, M2;
      }(), k = _.prototype;
      return O.prototype = k, [["$ms", r], ["$s", i], ["$m", s], ["$H", u], ["$W", a], ["$M", c], ["$y", h], ["$D", d]].forEach(function(t2) {
        k[t2[1]] = function(e2) {
          return this.$g(e2, t2[0], t2[1]);
        };
      }), O.extend = function(t2, e2) {
        return t2.$i || (t2(e2, _, O), t2.$i = true), O;
      }, O.locale = w, O.isDayjs = S, O.unix = function(t2) {
        return O(1e3 * t2);
      }, O.en = D[g], O.Ls = D, O.p = {}, O;
    });
  }
});

// node_modules/vue-drumroll-datetime-picker/node_modules/vue-scroll-picker/dist/index.js
var require_dist = __commonJS({
  "node_modules/vue-drumroll-datetime-picker/node_modules/vue-scroll-picker/dist/index.js"(exports, module) {
    !function(t, e) {
      if ("object" == typeof exports && "object" == typeof module)
        module.exports = e();
      else if ("function" == typeof define && define.amd)
        define([], e);
      else {
        var n = e();
        for (var i in n)
          ("object" == typeof exports ? exports : t)[i] = n[i];
      }
    }(window, function() {
      return function(t) {
        var e = {};
        function n(i) {
          if (e[i])
            return e[i].exports;
          var o = e[i] = { i, l: false, exports: {} };
          return t[i].call(o.exports, o, o.exports, n), o.l = true, o.exports;
        }
        return n.m = t, n.c = e, n.d = function(t2, e2, i) {
          n.o(t2, e2) || Object.defineProperty(t2, e2, { enumerable: true, get: i });
        }, n.r = function(t2) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
        }, n.t = function(t2, e2) {
          if (1 & e2 && (t2 = n(t2)), 8 & e2)
            return t2;
          if (4 & e2 && "object" == typeof t2 && t2 && t2.__esModule)
            return t2;
          var i = /* @__PURE__ */ Object.create(null);
          if (n.r(i), Object.defineProperty(i, "default", { enumerable: true, value: t2 }), 2 & e2 && "string" != typeof t2)
            for (var o in t2)
              n.d(i, o, (function(e3) {
                return t2[e3];
              }).bind(null, o));
          return i;
        }, n.n = function(t2) {
          var e2 = t2 && t2.__esModule ? function() {
            return t2.default;
          } : function() {
            return t2;
          };
          return n.d(e2, "a", e2), e2;
        }, n.o = function(t2, e2) {
          return Object.prototype.hasOwnProperty.call(t2, e2);
        }, n.p = "", n(n.s = 2);
      }([function(t, e, n) {
      }, function(t, e, n) {
      }, function(t, e, n) {
        "use strict";
        n.r(e), n.d(e, "install", function() {
          return m;
        }), n.d(e, "ScrollPicker", function() {
          return f;
        }), n.d(e, "ScrollPickerGroup", function() {
          return v;
        });
        n(0);
        function i(t2) {
          return function(t3) {
            if (Array.isArray(t3))
              return o(t3);
          }(t2) || function(t3) {
            if ("undefined" != typeof Symbol && Symbol.iterator in Object(t3))
              return Array.from(t3);
          }(t2) || function(t3, e2) {
            if (!t3)
              return;
            if ("string" == typeof t3)
              return o(t3, e2);
            var n2 = Object.prototype.toString.call(t3).slice(8, -1);
            "Object" === n2 && t3.constructor && (n2 = t3.constructor.name);
            if ("Map" === n2 || "Set" === n2)
              return Array.from(t3);
            if ("Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
              return o(t3, e2);
          }(t2) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function o(t2, e2) {
          (null == e2 || e2 > t2.length) && (e2 = t2.length);
          for (var n2 = 0, i2 = new Array(e2); n2 < e2; n2++)
            i2[n2] = t2[n2];
          return i2;
        }
        function r(t2) {
          return (r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t3) {
            return typeof t3;
          } : function(t3) {
            return t3 && "function" == typeof Symbol && t3.constructor === Symbol && t3 !== Symbol.prototype ? "symbol" : typeof t3;
          })(t2);
        }
        function s(t2) {
          return t2.map(function(t3) {
            switch (r(t3)) {
              case "string":
                return { value: t3, name: t3 };
              case "number":
              case "boolean":
                return { value: t3, name: "".concat(t3) };
            }
            return t3;
          });
        }
        function l(t2) {
          return t2.changedTouches || t2.touches;
        }
        function a(t2) {
          return l(t2) ? t2.changedTouches[0] || t2.touches[0] : t2;
        }
        var c, u, h, f = { props: { value: null, options: { type: Array, default: function() {
          return [];
        } }, dragSensitivity: { type: Number, default: 1.7 }, touchSensitivity: { type: Number, default: 1.7 }, scrollSensitivity: { type: Number, default: 1 }, empty: { type: String, default: "No Items" }, placeholder: { type: String, default: null } }, data: function() {
          var t2 = this, e2 = s(this.options), n2 = e2.findIndex(function(e3) {
            return e3.value == t2.value;
          });
          return -1 === n2 && !this.placeholder && this.options.length > 0 && (n2 = 0), { normalizedOptions: e2, innerIndex: n2, innerValue: e2[n2] && e2[n2].value || null, top: null, pivots: [], pivotMin: 0, pivotMax: 0, transitioning: false, transitionTO: null, start: null, isMouseDown: false, isDragging: false, scrollOffsetTop: 0, scrollMin: 0, scrollMax: 0 };
        }, mounted: function() {
          this.calculatePivots(), this.top = this.findScrollByIndex(this.innerIndex), this.innerValue !== this.value && this.$emit("input", this.innerValue), this.$el.addEventListener("touchstart", this.onStart), this.$el.addEventListener("touchmove", this.onMove), this.$el.addEventListener("touchend", this.onEnd), this.$el.addEventListener("touchcancel", this.onCancel), this.$el.addEventListener("mousewheel", this.onScroll), this.$el.addEventListener("DOMMouseScroll", this.onScroll), this.$el.addEventListener("wheel", this.onScroll), this.$el.addEventListener("mousedown", this.onStart), this.$el.addEventListener("mousemove", this.onMove), this.$el.addEventListener("mouseup", this.onEnd), this.$el.addEventListener("mouseleave", this.onCancel);
        }, destroyed: function() {
          this.$el.removeEventListener("touchstart", this.onStart), this.$el.removeEventListener("touchmove", this.onMove), this.$el.removeEventListener("touchend", this.onEnd), this.$el.removeEventListener("touchcancel", this.onCancel), this.$el.removeEventListener("mousewheel", this.onScroll), this.$el.removeEventListener("DOMMouseScroll", this.onScroll), this.$el.removeEventListener("wheel", this.onScroll), this.$el.removeEventListener("mousedown", this.onStart), this.$el.removeEventListener("mousemove", this.onMove), this.$el.removeEventListener("mouseup", this.onEnd), this.$el.removeEventListener("mouseleave", this.onCancel);
        }, watch: { value: function(t2) {
          if (null == t2 && this.placeholder)
            this.correction(-1);
          else {
            var e2 = this.normalizedOptions.findIndex(function(e3) {
              return e3.value == t2;
            });
            -1 !== e2 ? this.innerIndex !== e2 && this.correction(e2) : this.$emit("input", this.innerValue);
          }
        }, options: function(t2) {
          var e2 = this, n2 = this.normalizedOptions = s(t2), i2 = n2.findIndex(function(t3) {
            return t3.value == e2.value;
          });
          -1 === i2 && !this.placeholder && this.options.length > 0 && (i2 = 0);
          var o2 = n2[i2] && n2[i2].value || null;
          this.$nextTick(function() {
            e2.calculatePivots(), e2.top = e2.findScrollByIndex(i2), e2.innerIndex = i2, e2.innerValue !== o2 && e2.$emit("input", e2.innerValue = o2);
          });
        } }, methods: { resize: function() {
          var t2 = this;
          this.$nextTick(function() {
            t2.calculatePivots(), t2.top = t2.findScrollByIndex(t2.innerIndex);
          });
        }, calculatePivots: function() {
          var t2 = this.$refs.list.getBoundingClientRect().top;
          this.pivots = (this.$refs.items || []).map(function(e2) {
            return ((n2 = e2.getBoundingClientRect()).top + n2.bottom) / 2 - t2;
            var n2;
          }).sort(function(t3, e2) {
            return t3 - e2;
          }), this.pivotMin = Math.min.apply(Math, i(this.pivots)), this.pivotMax = Math.max.apply(Math, i(this.pivots)), this.scrollOffsetTop = this.$refs.selection.offsetTop + this.$refs.selection.offsetHeight / 2, this.scrollMin = this.scrollOffsetTop - this.pivotMin, this.scrollMax = this.scrollOffsetTop - this.pivotMax;
        }, sanitizeInternalIndex: function(t2) {
          return Math.min(Math.max(t2, this.placeholder ? -1 : 0), this.normalizedOptions.length - 1);
        }, findIndexFromScroll: function(t2) {
          var e2 = this, n2 = null, i2 = 0;
          return this.pivots.forEach(function(o2, r2) {
            var s2 = o2 + t2 - e2.scrollOffsetTop;
            (null === n2 || Math.abs(n2) > Math.abs(s2)) && (i2 = r2, n2 = s2);
          }), this.placeholder || 0 === this.options.length ? i2 - 1 : i2;
        }, findScrollByIndex: function(t2) {
          var e2 = t2;
          return (this.placeholder || 0 === this.options.length) && e2++, t2 > -1 && e2 in this.pivots ? this.scrollOffsetTop - this.pivots[e2] : t2 >= this.pivots.length ? this.scrollOffsetTop - this.pivotMax : this.scrollOffsetTop - this.pivotMin;
        }, onScroll: function(t2) {
          if (!(this.top >= this.scrollMin && t2.deltaY < 0 || this.top <= this.scrollMax && t2.deltaY > 0 || 1 === this.pivots.length)) {
            t2.preventDefault();
            var e2 = this.sanitizeInternalIndex(this.innerIndex + (t2.deltaY > 0 ? 1 : -1)), n2 = t2.deltaY > 0 ? this.findScrollByIndex(e2 - 1) - this.findScrollByIndex(e2) : this.findScrollByIndex(e2) - this.findScrollByIndex(e2 + 1), i2 = Math.max(Math.min(t2.deltaY, n2), -1 * n2);
            this.top = Math.min(Math.max(this.top - i2 * this.scrollSensitivity, this.scrollMax), this.scrollMin);
            var o2 = this.sanitizeInternalIndex(this.findIndexFromScroll(this.top)), r2 = this.normalizedOptions[o2] && this.normalizedOptions[o2].value || null;
            this.innerIndex = o2, this.innerValue !== r2 && this.$emit("input", this.innerValue = r2), this.onAfterWheel();
          }
        }, onAfterWheel: (c = function() {
          this.correction(this.findIndexFromScroll(this.top));
        }, u = 200, h = null, function() {
          h && (clearTimeout(h), h = null);
          var t2 = this, e2 = arguments;
          h = setTimeout(function() {
            return c.apply(t2, e2);
          }, u);
        }), onStart: function(t2) {
          t2.cancelable && t2.preventDefault();
          var e2 = a(t2).clientY;
          this.start = [this.top, e2], l(t2) || (this.isMouseDown = true), this.isDragging = false;
        }, onMove: function(t2) {
          if (t2.cancelable && t2.preventDefault(), this.start) {
            var e2 = a(t2).clientY - this.start[1];
            Math.abs(e2) > 1.5 && (this.isDragging = true), this.top = this.start[0] + e2 * (l(t2) ? this.touchSensitivity : this.dragSensitivity);
          }
        }, onEnd: function(t2) {
          t2.cancelable && t2.preventDefault(), this.isDragging ? this.correction(this.findIndexFromScroll(this.top)) : this.handleClick(t2), this.start = null, this.isDragging = false, this.isMouseDown = false;
        }, onCancel: function(t2) {
          t2.cancelable && t2.preventDefault(), this.correction(this.findIndexFromScroll(this.top)), this.start = null, this.isMouseDown = false, this.isDragging = false;
        }, handleClick: function(t2) {
          var e2 = a(t2), n2 = e2.clientX, i2 = e2.clientY, o2 = this.$refs.top.getBoundingClientRect(), r2 = this.$refs.bottom.getBoundingClientRect();
          o2.left <= n2 && n2 <= o2.right && o2.top <= i2 && i2 <= o2.bottom ? this.correction(this.innerIndex - 1) : r2.left <= n2 && n2 <= r2.right && r2.top <= i2 && i2 <= r2.bottom && this.correction(this.innerIndex + 1);
        }, correction: function(t2) {
          var e2 = this, n2 = this.sanitizeInternalIndex(t2), i2 = this.normalizedOptions[n2] && this.normalizedOptions[n2].value || null;
          this.top = this.findScrollByIndex(n2), this.transitioning = true, this.transitionTO && (clearTimeout(this.transitionTO), this.transitionTO = null), this.transitionTO = setTimeout(function() {
            e2.transitioning = false, e2.transitionTO = null, e2.innerIndex = n2, e2.innerValue !== i2 && (e2.innerValue = i2, e2.$emit("input", e2.innerValue));
          }, 100);
        } }, render: function(t2) {
          var e2 = this, n2 = [];
          return this.placeholder ? n2.push(t2("div", { class: { "vue-scroll-picker-item": true, "-placeholder": true, "-selected": -1 == this.innerIndex }, ref: "items", refInFor: true, domProps: { innerHTML: this.placeholder } })) : 0 === this.normalizedOptions.length && null === this.placeholder && n2.push(t2("div", { class: ["vue-scroll-picker-item", "-empty", "-selected"], ref: "items", refInFor: true, domProps: { innerHTML: this.empty } })), n2 = n2.concat(this.normalizedOptions.map(function(n3, i2) {
            return t2("div", { class: { "vue-scroll-picker-item": true, "-selected": e2.innerIndex == i2 }, key: n3.value, ref: "items", refInFor: true, domProps: { innerHTML: n3.name } });
          })), t2("div", { class: ["vue-scroll-picker"] }, [t2("div", { class: ["vue-scroll-picker-list"] }, [t2("div", { ref: "list", class: { "vue-scroll-picker-list-rotator": true, "-transition": this.transitioning }, style: null !== this.top ? { top: "".concat(this.top, "px") } : {} }, n2)]), t2("div", { class: ["vue-scroll-picker-layer"] }, [t2("div", { class: ["top"], ref: "top" }), t2("div", { class: ["middle"], ref: "selection" }), t2("div", { class: ["bottom"], ref: "bottom" })])]);
        } };
        n(1);
        function d(t2) {
          return function(t3) {
            if (Array.isArray(t3))
              return p(t3);
          }(t2) || function(t3) {
            if ("undefined" != typeof Symbol && Symbol.iterator in Object(t3))
              return Array.from(t3);
          }(t2) || function(t3, e2) {
            if (!t3)
              return;
            if ("string" == typeof t3)
              return p(t3, e2);
            var n2 = Object.prototype.toString.call(t3).slice(8, -1);
            "Object" === n2 && t3.constructor && (n2 = t3.constructor.name);
            if ("Map" === n2 || "Set" === n2)
              return Array.from(t3);
            if ("Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
              return p(t3, e2);
          }(t2) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }();
        }
        function p(t2, e2) {
          (null == e2 || e2 > t2.length) && (e2 = t2.length);
          for (var n2 = 0, i2 = new Array(e2); n2 < e2; n2++)
            i2[n2] = t2[n2];
          return i2;
        }
        var v = { render: function(t2) {
          return t2("div", { class: ["vue-scroll-picker-group"] }, d(this.$slots.default));
        } };
        function m(t2) {
          t2.component("ScrollPicker", f), t2.component("ScrollPickerGroup", v);
        }
        "undefined" != typeof window && window.Vue && m(window.Vue);
        e.default = { install: m };
      }]);
    });
  }
});

// node_modules/vue-drumroll-datetime-picker/dist/vue-drumroll-datetime-picker.js
var require_vue_drumroll_datetime_picker = __commonJS({
  "node_modules/vue-drumroll-datetime-picker/dist/vue-drumroll-datetime-picker.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var dayjs = require_dayjs_min();
    var vueScrollPicker = require_dist();
    function _interopDefaultLegacy(e) {
      return e && typeof e === "object" && "default" in e ? e : { "default": e };
    }
    var dayjs__default = _interopDefaultLegacy(dayjs);
    var DEFAULT_MIN_DATE = "1900-01-01 00:00:00";
    var MONTH_UNIT = 12;
    var HOUR_UNIT = 24;
    var MINUTE_UNIT = 60;
    var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
    function createCommonjsModule(fn) {
      var module2 = { exports: {} };
      return fn(module2, module2.exports), module2.exports;
    }
    var customParseFormat = createCommonjsModule(function(module2, exports2) {
      !function(t, e) {
        module2.exports = e();
      }(commonjsGlobal, function() {
        var t = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" }, e = /(\[[^[]*\])|([-:/.()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g, n = /\d\d/, r = /\d\d?/, i = /\d*[^\s\d-_:/()]+/, o = {}, s = function(t2) {
          return (t2 = +t2) + (t2 > 68 ? 1900 : 2e3);
        };
        var a = function(t2) {
          return function(e2) {
            this[t2] = +e2;
          };
        }, f = [/[+-]\d\d:?(\d\d)?|Z/, function(t2) {
          (this.zone || (this.zone = {})).offset = function(t3) {
            if (!t3)
              return 0;
            if ("Z" === t3)
              return 0;
            var e2 = t3.match(/([+-]|\d\d)/g), n2 = 60 * e2[1] + (+e2[2] || 0);
            return 0 === n2 ? 0 : "+" === e2[0] ? -n2 : n2;
          }(t2);
        }], u = function(t2) {
          var e2 = o[t2];
          return e2 && (e2.indexOf ? e2 : e2.s.concat(e2.f));
        }, h = function(t2, e2) {
          var n2, r2 = o.meridiem;
          if (r2) {
            for (var i2 = 1; i2 <= 24; i2 += 1)
              if (t2.indexOf(r2(i2, 0, e2)) > -1) {
                n2 = i2 > 12;
                break;
              }
          } else
            n2 = t2 === (e2 ? "pm" : "PM");
          return n2;
        }, d = { A: [i, function(t2) {
          this.afternoon = h(t2, false);
        }], a: [i, function(t2) {
          this.afternoon = h(t2, true);
        }], S: [/\d/, function(t2) {
          this.milliseconds = 100 * +t2;
        }], SS: [n, function(t2) {
          this.milliseconds = 10 * +t2;
        }], SSS: [/\d{3}/, function(t2) {
          this.milliseconds = +t2;
        }], s: [r, a("seconds")], ss: [r, a("seconds")], m: [r, a("minutes")], mm: [r, a("minutes")], H: [r, a("hours")], h: [r, a("hours")], HH: [r, a("hours")], hh: [r, a("hours")], D: [r, a("day")], DD: [n, a("day")], Do: [i, function(t2) {
          var e2 = o.ordinal, n2 = t2.match(/\d+/);
          if (this.day = n2[0], e2)
            for (var r2 = 1; r2 <= 31; r2 += 1)
              e2(r2).replace(/\[|\]/g, "") === t2 && (this.day = r2);
        }], M: [r, a("month")], MM: [n, a("month")], MMM: [i, function(t2) {
          var e2 = u("months"), n2 = (u("monthsShort") || e2.map(function(t3) {
            return t3.substr(0, 3);
          })).indexOf(t2) + 1;
          if (n2 < 1)
            throw new Error();
          this.month = n2 % 12 || n2;
        }], MMMM: [i, function(t2) {
          var e2 = u("months").indexOf(t2) + 1;
          if (e2 < 1)
            throw new Error();
          this.month = e2 % 12 || e2;
        }], Y: [/[+-]?\d+/, a("year")], YY: [n, function(t2) {
          this.year = s(t2);
        }], YYYY: [/\d{4}/, a("year")], Z: f, ZZ: f };
        function c(n2) {
          var r2, i2;
          r2 = n2, i2 = o && o.formats;
          for (var s2 = (n2 = r2.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function(e2, n3, r3) {
            var o2 = r3 && r3.toUpperCase();
            return n3 || i2[r3] || t[r3] || i2[o2].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(t2, e3, n4) {
              return e3 || n4.slice(1);
            });
          })).match(e), a2 = s2.length, f2 = 0; f2 < a2; f2 += 1) {
            var u2 = s2[f2], h2 = d[u2], c2 = h2 && h2[0], l = h2 && h2[1];
            s2[f2] = l ? { regex: c2, parser: l } : u2.replace(/^\[|\]$/g, "");
          }
          return function(t2) {
            for (var e2 = {}, n3 = 0, r3 = 0; n3 < a2; n3 += 1) {
              var i3 = s2[n3];
              if ("string" == typeof i3)
                r3 += i3.length;
              else {
                var o2 = i3.regex, f3 = i3.parser, u3 = t2.substr(r3), h3 = o2.exec(u3)[0];
                f3.call(e2, h3), t2 = t2.replace(h3, "");
              }
            }
            return function(t3) {
              var e3 = t3.afternoon;
              if (void 0 !== e3) {
                var n4 = t3.hours;
                e3 ? n4 < 12 && (t3.hours += 12) : 12 === n4 && (t3.hours = 0), delete t3.afternoon;
              }
            }(e2), e2;
          };
        }
        return function(t2, e2, n2) {
          n2.p.customParseFormat = true, t2 && t2.parseTwoDigitYear && (s = t2.parseTwoDigitYear);
          var r2 = e2.prototype, i2 = r2.parse;
          r2.parse = function(t3) {
            var e3 = t3.date, r3 = t3.utc, s2 = t3.args;
            this.$u = r3;
            var a2 = s2[1];
            if ("string" == typeof a2) {
              var f2 = true === s2[2], u2 = true === s2[3], h2 = f2 || u2, d2 = s2[2];
              u2 && (d2 = s2[2]), o = this.$locale(), !f2 && d2 && (o = n2.Ls[d2]), this.$d = function(t4, e4, n3) {
                try {
                  if (["x", "X"].indexOf(e4) > -1)
                    return new Date(("X" === e4 ? 1e3 : 1) * t4);
                  var r4 = c(e4)(t4), i3 = r4.year, o2 = r4.month, s3 = r4.day, a3 = r4.hours, f3 = r4.minutes, u3 = r4.seconds, h3 = r4.milliseconds, d3 = r4.zone, l2 = /* @__PURE__ */ new Date(), m2 = s3 || (i3 || o2 ? 1 : l2.getDate()), M2 = i3 || l2.getFullYear(), Y = 0;
                  i3 && !o2 || (Y = o2 > 0 ? o2 - 1 : l2.getMonth());
                  var p = a3 || 0, v = f3 || 0, D = u3 || 0, g = h3 || 0;
                  return d3 ? new Date(Date.UTC(M2, Y, m2, p, v, D, g + 60 * d3.offset * 1e3)) : n3 ? new Date(Date.UTC(M2, Y, m2, p, v, D, g)) : new Date(M2, Y, m2, p, v, D, g);
                } catch (t5) {
                  return /* @__PURE__ */ new Date("");
                }
              }(e3, a2, r3), this.init(), d2 && true !== d2 && (this.$L = this.locale(d2).$L), h2 && e3 != this.format(a2) && (this.$d = /* @__PURE__ */ new Date("")), o = {};
            } else if (a2 instanceof Array)
              for (var l = a2.length, m = 1; m <= l; m += 1) {
                s2[1] = a2[m - 1];
                var M = n2.apply(this, s2);
                if (M.isValid()) {
                  this.$d = M.$d, this.$L = M.$L, this.init();
                  break;
                }
                m === l && (this.$d = /* @__PURE__ */ new Date(""));
              }
            else
              i2.call(this, t3);
          };
        };
      });
    });
    var eras = [
      { name: "令和", from: "2019-05-01" },
      { name: "平成", from: "1989-01-08" },
      { name: "昭和", from: "1926-12-25" },
      { name: "大正", from: "1912-07-30" },
      { name: "明治", from: "1868-09-08" },
      { name: "慶応", from: "1865-04-07" },
      { name: "元治", from: "1864-02-20" },
      { name: "文久", from: "1861-02-19" },
      { name: "万延", from: "1860-03-18" },
      { name: "安政", from: "1854-11-27" },
      { name: "嘉永", from: "1848-02-28" },
      { name: "弘化", from: "1844-12-02" },
      { name: "天保", from: "1830-12-10" },
      { name: "文政", from: "1818-04-22" },
      { name: "文化", from: "1804-02-11" },
      { name: "享和", from: "1801-02-05" },
      { name: "寛政", from: "1789-01-25" },
      { name: "天明", from: "1781-04-02" },
      { name: "安永", from: "1772-11-16" },
      { name: "明和", from: "1764-06-02" },
      { name: "宝暦", from: "1751-10-27" },
      { name: "寛延", from: "1748-07-12" },
      { name: "延享", from: "1744-02-21" },
      { name: "寛保", from: "1741-02-27" },
      { name: "元文", from: "1736-04-28" },
      { name: "享保", from: "1716-06-22" },
      { name: "正徳", from: "1711-04-25" },
      { name: "宝永", from: "1704-03-13" },
      { name: "元禄", from: "1688-09-30" },
      { name: "貞享", from: "1684-02-21" },
      { name: "天和", from: "1681-09-29" },
      { name: "延宝", from: "1673-09-21" },
      { name: "寛文", from: "1661-04-25" },
      { name: "万治", from: "1658-07-23" },
      { name: "明暦", from: "1655-04-13" },
      { name: "承応", from: "1652-09-18" },
      { name: "慶安", from: "1648-02-15" },
      { name: "正保", from: "1644-12-16" },
      { name: "寛永", from: "1624-02-30" },
      { name: "元和", from: "1615-07-13" },
      { name: "慶長", from: "1596-10-27" },
      { name: "文禄", from: "1592-12-08" },
      { name: "天正", from: "1573-07-28" },
      { name: "元亀", from: "1570-04-23" },
      { name: "永禄", from: "1558-02-28" },
      { name: "弘治", from: "1555-10-23" },
      { name: "天文", from: "1532-07-29" },
      { name: "享禄", from: "1528-08-20" },
      { name: "大永", from: "1521-08-23" },
      { name: "永正", from: "1504-02-30" },
      { name: "文亀", from: "1501-02-29" },
      { name: "明応", from: "1492-07-19" },
      { name: "延徳", from: "1489-08-21" },
      { name: "長享", from: "1487-07-20" },
      { name: "文明", from: "1469-04-28" },
      { name: "応仁", from: "1467-03-05" },
      { name: "文正", from: "1466-02-28" },
      { name: "寛正", from: "1460-12-21" },
      { name: "長禄", from: "1457-09-28" },
      { name: "康正", from: "1455-07-25" },
      { name: "享徳", from: "1452-07-25" },
      { name: "宝徳", from: "1449-07-28" },
      { name: "文安", from: "1444-02-05" },
      { name: "嘉吉", from: "1441-02-17" },
      { name: "永享", from: "1429-09-05" },
      { name: "正長", from: "1428-04-27" },
      { name: "応永", from: "1394-07-05" },
      { name: "明徳", from: "1390-03-26" },
      { name: "元中", from: "1384-04-28" },
      { name: "弘和", from: "1381-02-10" },
      { name: "天授", from: "1375-05-27" },
      { name: "文中", from: "1372-04-？" },
      { name: "建徳", from: "1370-07-24" },
      { name: "正平", from: "1346-12-08" },
      { name: "興国", from: "1340-04-28" },
      { name: "延元", from: "1336-02-29" },
      { name: "建武", from: "1334-01-29" },
      { name: "元弘", from: "1331-08-09" },
      { name: "元徳", from: "1329-08-29" },
      { name: "嘉暦", from: "1326-04-26" },
      { name: "正中", from: "1324-12-09" },
      { name: "元亨", from: "1321-02-23" },
      { name: "元応", from: "1319-04-28" },
      { name: "文保", from: "1317-02-03" },
      { name: "正和", from: "1312-03-20" },
      { name: "応長", from: "1311-04-28" },
      { name: "延慶", from: "1308-10-09" },
      { name: "徳治", from: "1306-12-14" },
      { name: "嘉元", from: "1303-08-05" },
      { name: "乾元", from: "1302-11-21" },
      { name: "正安", from: "1299-04-25" },
      { name: "永仁", from: "1293-08-05" },
      { name: "正応", from: "1288-04-28" },
      { name: "弘安", from: "1278-02-29" },
      { name: "建治", from: "1275-04-25" },
      { name: "文永", from: "1264-02-28" },
      { name: "弘長", from: "1261-02-20" },
      { name: "文応", from: "1260-04-13" },
      { name: "正元", from: "1259-03-26" },
      { name: "正嘉", from: "1257-03-14" },
      { name: "康元", from: "1256-10-05" },
      { name: "建長", from: "1249-03-18" },
      { name: "宝治", from: "1247-02-28" },
      { name: "寛元", from: "1243-02-26" },
      { name: "仁治", from: "1240-07-16" },
      { name: "延応", from: "1239-02-07" },
      { name: "暦仁", from: "1238-11-23" },
      { name: "嘉禎", from: "1235-09-19" },
      { name: "文暦", from: "1234-11-05" },
      { name: "天福", from: "1233-04-15" },
      { name: "貞永", from: "1232-04-02" },
      { name: "寛喜", from: "1229-03-05" },
      { name: "安貞", from: "1227-12-10" },
      { name: "嘉禄", from: "1225-04-20" },
      { name: "元仁", from: "1224-11-20" },
      { name: "貞応", from: "1222-04-13" },
      { name: "承久", from: "1219-04-12" },
      { name: "建保", from: "1213-12-06" },
      { name: "建暦", from: "1211-03-09" },
      { name: "承元", from: "1207-10-25" },
      { name: "建永", from: "1206-04-27" },
      { name: "元久", from: "1204-02-20" },
      { name: "建仁", from: "1201-02-13" },
      { name: "正治", from: "1199-04-27" },
      { name: "建久", from: "1190-04-11" },
      { name: "文治", from: "1185-08-14" },
      { name: "元暦", from: "1184-04-16" },
      { name: "寿永", from: "1182-05-27" },
      { name: "養和", from: "1181-07-14" },
      { name: "治承", from: "1177-08-04" },
      { name: "安元", from: "1175-07-28" },
      { name: "承安", from: "1171-04-21" },
      { name: "嘉応", from: "1169-04-08" },
      { name: "仁安", from: "1166-08-27" },
      { name: "永万", from: "1165-06-05" },
      { name: "長寛", from: "1163-03-29" },
      { name: "応保", from: "1161-09-04" },
      { name: "永暦", from: "1160-01-10" },
      { name: "平治", from: "1159-04-20" },
      { name: "保元", from: "1156-04-27" },
      { name: "久寿", from: "1154-10-28" },
      { name: "仁平", from: "1151-01-26" },
      { name: "久安", from: "1145-07-22" },
      { name: "天養", from: "1144-02-23" },
      { name: "康治", from: "1142-04-28" },
      { name: "永治", from: "1141-07-10" },
      { name: "保延", from: "1135-04-27" },
      { name: "長承", from: "1132-08-11" },
      { name: "天承", from: "1131-01-29" },
      { name: "大治", from: "1126-01-22" },
      { name: "天治", from: "1124-04-03" },
      { name: "保安", from: "1120-04-10" },
      { name: "元永", from: "1118-04-03" },
      { name: "永久", from: "1113-07-13" },
      { name: "天永", from: "1110-07-13" },
      { name: "天仁", from: "1108-08-03" },
      { name: "嘉承", from: "1106-04-09" },
      { name: "長治", from: "1104-02-10" },
      { name: "康和", from: "1099-08-28" },
      { name: "承徳", from: "1097-11-21" },
      { name: "永長", from: "1096-12-17" },
      { name: "嘉保", from: "1094-12-15" },
      { name: "寛治", from: "1087-04-07" },
      { name: "応徳", from: "1084-02-07" },
      { name: "永保", from: "1081-02-10" },
      { name: "承暦", from: "1077-11-17" },
      { name: "承保", from: "1074-08-23" },
      { name: "延久", from: "1069-04-13" },
      { name: "治暦", from: "1065-08-02" },
      { name: "康平", from: "1058-08-29" },
      { name: "天喜", from: "1053-01-11" },
      { name: "永承", from: "1046-04-14" },
      { name: "寛徳", from: "1044-11-24" },
      { name: "長久", from: "1040-11-10" },
      { name: "長暦", from: "1037-04-21" },
      { name: "長元", from: "1028-07-25" },
      { name: "万寿", from: "1024-07-13" },
      { name: "治安", from: "1021-02-02" },
      { name: "寛仁", from: "1017-04-23" },
      { name: "長和", from: "1012-12-25" },
      { name: "寛弘", from: "1004-07-20" },
      { name: "長保", from: "999-01-13" },
      { name: "長徳", from: "995-02-22" },
      { name: "正暦", from: "990-11-07" },
      { name: "永祚", from: "989-08-08" },
      { name: "永延", from: "987-04-05" },
      { name: "寛和", from: "985-04-27" },
      { name: "永観", from: "983-04-15" },
      { name: "天元", from: "978-11-29" },
      { name: "貞元", from: "976-07-13" },
      { name: "天延", from: "973-12-20" },
      { name: "天禄", from: "970-03-25" },
      { name: "安和", from: "968-08-13" },
      { name: "康保", from: "964-07-10" },
      { name: "応和", from: "961-02-16" },
      { name: "天徳", from: "957-10-27" },
      { name: "天暦", from: "947-04-22" },
      { name: "天慶", from: "938-05-22" },
      { name: "承平", from: "931-04-26" },
      { name: "延長", from: "923-閏4-11" },
      { name: "延喜", from: "901-07-15" },
      { name: "昌泰", from: "898-04-26" },
      { name: "寛平", from: "889-04-27" },
      { name: "仁和", from: "885-02-21" },
      { name: "元慶", from: "877-04-16" },
      { name: "貞観", from: "859-04-15" },
      { name: "天安", from: "857-02-21" },
      { name: "斎衡", from: "854-11-30" },
      { name: "仁寿", from: "851-04-28" },
      { name: "嘉祥", from: "848-06-13" },
      { name: "承和", from: "834-01-03" },
      { name: "天長", from: "824-01-05" },
      { name: "弘仁", from: "810-09-19" },
      { name: "大同", from: "806-05-18" },
      { name: "延暦", from: "782-08-19" },
      { name: "天応", from: "781-01-01" },
      { name: "宝亀", from: "770-10-01" },
      { name: "神護景雲", from: "767-08-16" },
      { name: "天平神護", from: "765-01-07" },
      { name: "天平宝字", from: "757-08-18" },
      { name: "天平勝宝", from: "749-07-02" },
      { name: "天平感宝", from: "749-04-14" },
      { name: "天平", from: "729-08-05" },
      { name: "神亀", from: "724-02-04" },
      { name: "養老", from: "717-11-17" },
      { name: "霊亀", from: "715-09-02" },
      { name: "和銅", from: "708-01-11" },
      { name: "慶雲", from: "704-05-10" },
      { name: "大宝", from: "701-03-21" },
      { name: "朱鳥", from: "686-07-20" },
      { name: "白雉", from: "650-02-15" },
      { name: "大化", from: "645-06-19" }
    ];
    var _default = eras;
    var eras_1 = Object.defineProperty({
      default: _default
    }, "__esModule", { value: true });
    var utils = createCommonjsModule(function(module2, exports2) {
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.getJpEra = exports2.getJpYear = exports2.findEra = void 0;
      exports2.findEra = function(date) {
        var _a;
        var time = date.getTime();
        var era = eras_1.default.find(function(e) {
          return time >= new Date(e.from).getTime();
        });
        return (_a = era === null || era === void 0 ? void 0 : era.name) !== null && _a !== void 0 ? _a : "";
      };
      exports2.getJpYear = function(date) {
        var result;
        try {
          result = Intl.DateTimeFormat("ja-JP-u-ca-japanese", {
            year: "2-digit",
            era: "long"
          }).format(date).slice(0, -1);
          if (!isNaN(Number(result))) {
            result = exports2.findEra(date) + result;
          }
        } catch (_a) {
          result = "該当なし";
        }
        return result;
      };
      exports2.getJpEra = function(date) {
        var result;
        try {
          result = Intl.DateTimeFormat("ja-JP-u-ca-japanese", {
            era: "long"
          }).format(date).slice(0, 2);
          if (!isNaN(Number(result))) {
            result = exports2.findEra(date) + result;
          }
        } catch (_a) {
          result = "不明";
        }
        return result;
      };
    });
    var dist = createCommonjsModule(function(module2, exports2) {
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.jpFormat = void 0;
      exports2.jpFormat = function(_o, c) {
        var proto = c.prototype;
        var oldFormat = proto.format;
        proto.format = function(formatStr) {
          var _this = this;
          var result = formatStr.replace(/\[([^\]]+)]|r+|/g, function(match2) {
            switch (match2) {
              case "rrrr":
                return utils.getJpYear(_this.toDate());
              case "rr":
                return utils.getJpEra(_this.toDate());
              default:
                return match2;
            }
          });
          return oldFormat.bind(this)(result);
        };
      };
    });
    dayjs__default["default"].extend(customParseFormat);
    dayjs__default["default"].extend(dist.jpFormat);
    var match = (pattern, format, index = 0) => {
      const match2 = format.match(pattern);
      return match2 ? match2[index] : "";
    };
    var calculatePattern = (format) => {
      return {
        year: match(/Y+/, format),
        month: match(/M+/, format),
        date: match(/D+/, format),
        hour: match(/H+/i, format),
        minute: match(/m+/, format),
        dividerDate: match(/[YMD]+([^YMD]*)[YMD]+/, format, 1),
        dividerTime: match(/[Hms]+([^Hms]*)[Hms]+/, format, 1)
      };
    };
    var guessDateOrder = (baseFormat) => {
      return [
        { type: "year", index: baseFormat.indexOf("Y") },
        { type: "month", index: baseFormat.indexOf("M") },
        { type: "date", index: baseFormat.indexOf("D") }
      ].sort((a, b) => a.index - b.index).map((item) => item.type);
    };
    var datestring = (value, modelFormat, type) => {
      if (!value)
        return void 0;
      const baseFormat = "^" + modelFormat.replace(/(Aa|M{3,4}|d{2,4})/g, "[\\u\\l]+?").replace(/([YMDHms])/g, "\\d");
      const format = new RegExp(baseFormat);
      if (format.test(value)) {
        const modelValue = dayjs__default["default"](value, modelFormat);
        if (modelValue.isValid()) {
          return modelValue.format(modelFormat);
        } else if (type === "time" && typeof value === "string") {
          const datetime = `1980-01-01 ${value}`;
          const date = dayjs__default["default"](datetime, `YYYY-MM-DD ${modelFormat}`);
          return date.isValid() ? datetime : void 0;
        }
        return void 0;
      } else {
        return void 0;
      }
    };
    var useBindings = {
      props: {
        align: { type: String, default: "right" },
        defaultValue: { type: String, default: void 0 },
        pattern: { type: Object, default: void 0 },
        format: { type: [String, Object], default: void 0 },
        value: { type: [String, Number, Date], default: void 0 }
      },
      computed: {
        modelValue: {
          get() {
            const modelValue = this.value || this.defaultValue || dayjs__default["default"]().format(this.modelFormat);
            return datestring(modelValue, this.modelFormat, this.type);
          },
          set(value) {
            const valueObj = dayjs__default["default"](value, this.format);
            if (this.minDate && valueObj.isBefore(this.minDate))
              value = this.minDate;
            if (this.maxDate && valueObj.isAfter(this.maxDate))
              value = this.maxDate;
            this.$emit("input", value);
          }
        },
        modelFormat() {
          if (this.format)
            return this.format;
          switch (this.type) {
            case "datetime":
              return "YYYY-MM-DD HH:mm";
            case "date":
              return "YYYY-MM-DD";
            case "time":
              return "HH:mm";
            default:
              throw new Error('Invalid property. "type" is only allow "datetime/date/time".');
          }
        },
        drumPattern() {
          return {
            ...calculatePattern(this.modelFormat),
            ...this.pattern || {}
          };
        }
      },
      methods: {
        onInput(value) {
          if (dayjs__default["default"].unix(value).isBefore(this.minDate)) {
            this.modelValue = datestring(this.minDate, this.modelFormat, this.type);
          } else if (this.maxDate && dayjs__default["default"](value).isAfter(this.maxDate)) {
            this.modelValue = datestring(this.maxDate, this.modelFormat, this.type);
          } else {
            this.modelValue = datestring(value, this.modelFormat, this.type);
          }
        },
        onNativeInput(event) {
          const value = datestring(event.target.value, this.modelFormat, this.type);
          if (value)
            this.modelValue = value;
        }
      }
    };
    var OverlayLayer = {
      name: "OverlayLayer",
      functional: true,
      props: {
        dark: { type: Boolean, default: false }
      },
      render(h, context) {
        return h("div", {
          class: [
            "v-drumroll-picker__overlay",
            context.props.dark ? "--dark" : ""
          ],
          on: {
            click: context.listeners.click
          }
        });
      }
    };
    var mdiCheckBold = "M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z";
    var ConfirmButton = {
      name: "ConfirmButton",
      functional: true,
      props: {
        size: { type: [Number, String], default: 24 }
      },
      render(h, { props, listeners }) {
        const icon = h(
          "svg",
          {
            class: ["v-drumroll-picker__button--icon"],
            style: {
              height: `${props.size}px`,
              width: `${props.size}px`
            },
            attrs: {
              viewBox: "0 0 24 24"
            }
          },
          [h("path", {
            attrs: { d: mdiCheckBold }
          })]
        );
        return h("button", {
          class: ["v-drumroll-picker__button"],
          on: { ...listeners }
        }, [icon]);
      }
    };
    var pickerLayer = (h) => h("div", { class: ["vue-scroll-picker-layer"] }, [
      h("div", { class: ["top"], ref: "top" }),
      h("div", { class: ["middle"], ref: "selection" }),
      h("div", { class: ["bottom"], ref: "bottom" })
    ]);
    var confirmButton = (h, { props, listeners }) => !props.dialog || props.hideButton ? [] : [h(ConfirmButton, { on: listeners })];
    var PickerContainer = {
      name: "PickerContainer",
      functional: true,
      props: {
        dialog: { type: Boolean, default: false },
        height: { type: [Number, String], default: "10em" },
        hideButton: { type: Boolean, default: false }
      },
      render: (h, context) => h(
        "div",
        {
          class: "v-drumroll-picker__container",
          style: {
            height: typeof context.props.height === "string" ? context.props.height : context.props.height + "px"
          }
        },
        [
          pickerLayer(h),
          ...context.children,
          pickerLayer(h),
          ...confirmButton(h, context)
        ]
      )
    };
    var transitionLayer = (h, content) => h("transition", {
      props: {
        name: "v-drumroll-picker__slide-transition",
        mode: "in-out",
        appear: true,
        duration: 300
      }
    }, [content]);
    var ContentLayer = {
      name: "ContentLayer",
      functional: true,
      render(h, context) {
        return transitionLayer(h, h("div", {
          class: "v-drumroll-picker__content",
          on: { click: (e) => e.stopPropagation() }
        }, context.children));
      }
    };
    var disableScroll = (e) => {
      e.preventDefault();
      e.stopPropagation();
    };
    var useDialog = {
      props: {
        dialog: { type: Boolean, default: false },
        hideOverlay: { type: Boolean, default: false },
        hideButton: { type: Boolean, default: false }
      },
      data() {
        return {
          active: false
        };
      },
      methods: {
        generateDialogPicker(h) {
          const content = [this.generateActivator(h)];
          if (this.active) {
            content.push(h(OverlayLayer, {
              props: { dark: !this.hideOverlay },
              on: { click: this.offActivate }
            }));
            const picker = h(PickerContainer, {
              props: this.$props,
              on: { click: this.offActivate }
            }, [this.pickers(h)]);
            content.push(h(ContentLayer, [picker]));
          }
          return h("div", { class: ["v-drumroll-picker", "v-drumroll-picker--dialog"] }, content);
        },
        generateActivator(h) {
          const on = {
            click: this.onActivate,
            focus: this.onActivate,
            touchend: this.onActivate
          };
          if (this.$scopedSlots.activator) {
            return this.$scopedSlots.activator({ on });
          }
          const options = {
            class: "v-drumroll-picker__input",
            domProps: { value: this.value },
            on: { input: this.onNativeInput, ...on }
          };
          return h("input", options);
        },
        /**
         * @param {KeyboardEvent} e
         */
        onClose(e) {
          if (e.key.toUpperCase() === "ESCAPE")
            this.offActivate(e);
        },
        /**
         * @param {MouseEvent} e
         */
        onActivate(e) {
          e.preventDefault();
          document.addEventListener("keydown", this.onClose);
          document.addEventListener("scroll", disableScroll, { passive: false });
          document.addEventListener("wheel", disableScroll, { passive: false });
          document.addEventListener("touchmove", disableScroll, { passive: false });
          const isElement = document.activeElement instanceof HTMLElement;
          if (!this.active && !this.hideOverlay && isElement)
            document.activeElement.blur();
          const modelFormat = this.format || this.modelFormat;
          const modelValue = this.value || this.defaultValue || dayjs__default["default"]().format(modelFormat);
          const initialValue = datestring(modelValue, modelFormat, this.type);
          this.$emit("input", initialValue);
          this.active = !this.active;
        },
        /**
         * @param {MouseEvent|KeyboardEvent} e
         */
        offActivate(e) {
          e.preventDefault();
          document.removeEventListener("keydown", this.onClose);
          document.removeEventListener("scroll", disableScroll);
          document.removeEventListener("wheel", disableScroll);
          document.removeEventListener("touchmove", disableScroll);
          this.active = false;
        }
      }
    };
    var useSensitivity = {
      props: {
        /**
         * Dependency library properties
         * @see https://github.com/wan2land/vue-scroll-picker
         */
        dragSensitivity: { type: [String, Number], default: 1.7 },
        touchSensitivity: { type: [String, Number], default: 1.7 },
        scrollSensitivity: { type: [String, Number], default: 0.8 }
      }
    };
    var DrumDivider = {
      name: "DrumDivider",
      functional: true,
      props: {
        divider: { type: String, required: true }
      },
      render(h, { props }) {
        return h("span", { class: "v-drumroll-picker__divider -selected" }, [props.divider]);
      }
    };
    var BasePicker = {
      name: "BasePicker",
      functional: true,
      mixins: [
        useSensitivity
      ],
      props: {
        align: { type: String, default: "center" },
        items: { type: Array, required: true },
        format: { type: String, required: true },
        height: { type: [String, Number], default: "10em" },
        unit: { type: String, required: true },
        value: { type: [String, Number], default: void 0 }
      },
      render(h, { props, listeners }) {
        return h(vueScrollPicker.ScrollPicker, {
          style: {
            "--picker-align": props.align,
            height: typeof props.height === "string" ? props.height : props.height + "px"
          },
          props: {
            options: props.items,
            dragSensitivity: props.dragSensitivity,
            touchSensitivity: props.touchSensitivity,
            scrollSensitivity: props.scrollSensitivity,
            value: dayjs__default["default"](props.value, props.format).get(props.unit)
          },
          on: {
            input: (value) => {
              if (!value)
                value = 0;
              const dateObj = props.value ? dayjs__default["default"](props.value, props.format) : dayjs__default["default"]();
              const current = dateObj.get(props.unit);
              const date = dateObj.set(props.unit, value);
              if (current <= value && date.get(props.unit) < value)
                return;
              listeners.input(date.unix());
            }
          }
        });
      }
    };
    var BaseDatePicker = {
      name: "BaseDatePicker",
      mixins: [useSensitivity],
      props: {
        align: { type: String, default: "center" },
        dateOrder: { type: Array, default: void 0 },
        defaultValue: { type: String, default: void 0 },
        drumPattern: { type: Object, required: true },
        format: { type: [String, Object], default: "YYYY-MM-DD" },
        height: { type: [String, Number], default: void 0 },
        maxDate: { type: [String, Number, Date], default: void 0 },
        minDate: { type: [String, Number, Date], default: DEFAULT_MIN_DATE },
        separator: { type: String, default: void 0 },
        // deprecated
        value: { type: [String, Number, Date], default: void 0 }
      },
      data() {
        const date = dayjs__default["default"](this.value || this.defaultValue, this.format).endOf("month").date();
        return {
          date,
          numberOfDays: date,
          dateOfMin: 1,
          monthOfMin: 0
        };
      },
      computed: {
        formatDefaultValue() {
          return dayjs__default["default"](this.defaultValue).format(this.format);
        },
        /**
         * 年配列
         *
         * @return {array}
         */
        years() {
          const value = this.value || this.defaultValue;
          const minYear = dayjs__default["default"](this.minDate).year();
          const maxYear = this.maxDate ? dayjs__default["default"](this.maxDate).year() : dayjs__default["default"](value, this.format).add(100, "year").year();
          const years = [];
          const dateObj = dayjs__default["default"](value, this.format);
          for (let year = minYear; year <= maxYear; year++) {
            years.push({
              name: dateObj.set("year", year).format(this.drumPattern.year),
              value: year
            });
          }
          return years;
        },
        /**
         * 月配列
         *
         * @return {array}
         */
        months() {
          const value = this.value || this.defaultValue;
          const currentDate = dayjs__default["default"](value, this.format);
          const minDate = dayjs__default["default"](this.minDate);
          let min = currentDate.isSame(minDate, "year") ? minDate.month() : 0;
          let max = this.maxDate && currentDate.isSame(this.maxDate, "year") ? dayjs__default["default"](this.maxDate).month() + 1 : MONTH_UNIT;
          if (min > currentDate.month() || max < currentDate.month()) {
            min = 0;
            max = MONTH_UNIT;
          }
          const months = [];
          const dateObj = dayjs__default["default"](value, this.format);
          for (let month = Math.min(this.monthOfMin, min); month < max; month++) {
            months.push({
              name: dateObj.set("month", month).format(this.drumPattern.month),
              value: month
            });
          }
          this.$nextTick(() => setTimeout(() => {
            this.monthOfMin = min;
          }, 100));
          return months;
        },
        /**
         * 日配列
         *
         * @params {string} date
         * @return {array}
         */
        days() {
          const value = this.value || this.defaultValue;
          const currentDate = dayjs__default["default"](value, this.format);
          const minDate = dayjs__default["default"](this.minDate);
          let min = currentDate.isSame(minDate, "month") ? minDate.date() : 1;
          let max = this.maxDate && currentDate.isSame(this.maxDate, "month") ? dayjs__default["default"](this.maxDate).date() : this.numberOfDays;
          if (min > currentDate.date() || max < currentDate.date()) {
            min = 1;
            max = this.numberOfDays;
          }
          const days = [];
          const dateObj = currentDate.clone();
          for (let date = Math.min(this.dateOfMin, min); date <= max; date++) {
            days.push({
              name: date <= this.date && date >= min ? dateObj.set("date", date).format(this.drumPattern.date) : "",
              value: date
            });
          }
          this.$nextTick(() => setTimeout(() => {
            this.dateOfMin = min;
            this.numberOfDays = this.date;
          }, 100));
          return days;
        }
      },
      watch: {
        value(newValue) {
          const newDate = dayjs__default["default"](newValue, this.format);
          this.date = newDate.endOf("month").date();
        }
      },
      methods: {
        onInput(value) {
          if (!value)
            return;
          let valueObj = dayjs__default["default"].unix(value);
          if (valueObj.isBefore(this.minDate))
            valueObj = dayjs__default["default"](this.minDate);
          if (this.maxDate && valueObj.isAfter(this.maxDate))
            valueObj = dayjs__default["default"](this.maxDate);
          if (this.value || valueObj.format(this.format) !== this.formatDefaultValue) {
            this.$emit("input", valueObj.format(this.format));
          }
        }
      },
      render(h) {
        const divider = this.separator || this.drumPattern.dividerDate || this.drumPattern["divider-date"];
        const drumDivider = divider ? h(DrumDivider, { props: { divider } }) : null;
        const drums = {
          year: h(BasePicker, {
            props: {
              items: this.years,
              unit: "year",
              ...this.$props,
              value: this.value || this.defaultValue
            },
            on: {
              input: this.onInput
            }
          }),
          month: h(BasePicker, {
            props: {
              items: this.months,
              unit: "month",
              ...this.$props,
              value: this.value || this.defaultValue
            },
            on: {
              input: this.onInput
            }
          }),
          date: h(BasePicker, {
            props: {
              items: this.days,
              unit: "date",
              ...this.$props,
              value: this.value || this.defaultValue
            },
            on: {
              input: this.onInput
            }
          })
        };
        const pickers = [];
        const dateOrder = this.dateOrder || guessDateOrder(this.format);
        for (let i = 0; i < dateOrder.length; i++) {
          pickers.push(drums[dateOrder[i]]);
          if (divider && i < dateOrder.length - 1)
            pickers.push(drumDivider);
        }
        return h(vueScrollPicker.ScrollPickerGroup, pickers);
      }
    };
    var BaseTimePicker = {
      name: "BaseTimePicker",
      mixins: [useSensitivity],
      props: {
        align: { type: String, default: "center" },
        defaultValue: { type: String, default: void 0 },
        drumPattern: { type: Object, required: true },
        format: { type: String, default: "YYYY-MM-DD HH:mm" },
        height: { type: [String, Number], default: void 0 },
        maxDate: { type: [String, Number, Date], default: void 0 },
        minDate: { type: [String, Number, Date], default: void 0 },
        minuteInterval: { type: [String, Number], default: 1 },
        separator: { type: String, default: void 0 },
        // deprecated
        value: { type: [String, Number, Date], default: void 0 }
      },
      data() {
        return {
          hourOfMin: 0,
          minuteOfMin: 0
        };
      },
      computed: {
        formatDefaultValue() {
          return dayjs__default["default"](this.defaultValue).format(this.format);
        },
        /**
         * 時配列
         *
         * @return {array}
         */
        hours() {
          let min = 0;
          let max = HOUR_UNIT;
          const value = this.value || this.defaultValue;
          const currentDate = value ? dayjs__default["default"](value, this.format) : dayjs__default["default"]();
          if (this.minDate) {
            const minDate = dayjs__default["default"](this.minDate);
            min = currentDate.isSame(minDate, "date") ? minDate.hour() : 0;
          }
          if (this.maxDate) {
            max = this.maxDate && currentDate.isSame(this.maxDate, "date") ? dayjs__default["default"](this.maxDate).hour() + 1 : HOUR_UNIT;
          }
          const hours = [];
          const dateObj = currentDate.clone();
          for (let hour = Math.min(this.hourOfMin, min); hour < max; hour++) {
            hours.push({
              name: dateObj.set("hour", hour).format(this.drumPattern.hour),
              value: hour
            });
          }
          this.$nextTick(() => setTimeout(() => {
            this.hourOfMin = min;
          }, 100));
          return hours;
        },
        /**
         * 分配列
         *
         * @return {array}
         */
        minutes() {
          let min = 0;
          let max = MINUTE_UNIT;
          const value = this.value || this.defaultValue;
          const currentDate = value ? dayjs__default["default"](value, this.format) : dayjs__default["default"]();
          if (this.minDate) {
            const minDate = dayjs__default["default"](this.minDate);
            min = currentDate.isSame(minDate, "hour") ? minDate.minute() : 0;
          }
          if (this.maxDate) {
            max = this.maxDate && currentDate.isSame(this.maxDate, "hour") ? dayjs__default["default"](this.maxDate).minute() + 1 : MINUTE_UNIT;
          }
          const interval = Number(this.minuteInterval);
          const minutes = [];
          const dateObj = currentDate.clone();
          for (let minute = Math.min(this.minuteOfMin, min); minute < max; minute += interval) {
            minutes.push({
              name: dateObj.set("minute", minute).format(this.drumPattern.minute),
              value: minute
            });
          }
          this.$nextTick(() => setTimeout(() => {
            this.minuteOfMin = min;
          }, 100));
          return minutes;
        }
      },
      methods: {
        onInput(value) {
          if (value && (this.value || dayjs__default["default"].unix(value).format(this.format) !== this.formatDefaultValue)) {
            this.$emit("input", dayjs__default["default"].unix(value).format(this.format));
          }
        }
      },
      render(h) {
        const divider = this.separator || this.drumPattern.dividerTime || this.drumPattern["divider-time"];
        const drumDivider = divider ? h(DrumDivider, { props: { divider } }) : null;
        const hourPicker = h(BasePicker, {
          props: {
            ...this.$props,
            items: this.hours,
            unit: "hour"
          },
          on: {
            input: this.onInput
          }
        });
        const minutePicker = h(BasePicker, {
          props: {
            ...this.$props,
            items: this.minutes,
            unit: "minute"
          },
          on: {
            input: this.onInput
          }
        });
        return h(vueScrollPicker.ScrollPickerGroup, [
          hourPicker,
          drumDivider,
          minutePicker
        ]);
      }
    };
    var generateDatePicker = (h, options) => h(BaseDatePicker, options());
    var generateTimePicker = (h, options) => h(BaseTimePicker, options());
    var DateTimePicker = {
      name: "DateTimePicker",
      mixins: [
        useBindings,
        useDialog,
        useSensitivity
      ],
      props: {
        dateOrder: { type: Array, default: void 0 },
        height: { type: [String, Number], default: void 0 },
        hideButton: { type: Boolean, default: false },
        maxDate: { type: [String, Number, Date], default: void 0 },
        minDate: { type: [String, Number, Date], default: () => DEFAULT_MIN_DATE },
        minuteInterval: { type: [String, Number], default: 1 },
        type: { type: String, default: "datetime" }
      },
      methods: {
        pickers(h) {
          const options = (props) => ({
            props: {
              ...this.$props,
              ...props,
              value: this.modelValue,
              format: this.modelFormat,
              drumPattern: this.drumPattern
            },
            on: { input: this.onInput }
          });
          switch (this.type) {
            case "datetime":
              return [generateDatePicker(h, options), generateTimePicker(h, options)];
            case "date":
              return [generateDatePicker(h, options)];
            case "time":
              return [generateTimePicker(h, options)];
          }
        }
      },
      render(h) {
        if (this.dialog) {
          return this.generateDialogPicker(h);
        } else {
          const container = h(PickerContainer, { props: this.$props }, [this.pickers(h)]);
          return h("div", { class: ["v-drumroll-picker"] }, [container]);
        }
      }
    };
    var DatePicker = {
      name: "DatePicker",
      mixins: [
        useBindings,
        useDialog,
        useSensitivity
      ],
      props: {
        dateOrder: { type: Array, default: void 0 },
        height: { type: [String, Number], default: void 0 },
        hideButton: { type: Boolean, default: false },
        maxDate: { type: [String, Number, Date], default: void 0 },
        minDate: { type: [String, Number, Date], default: () => DEFAULT_MIN_DATE },
        separator: { type: String, default: void 0 }
        // deprecated
      },
      computed: {
        type() {
          return "date";
        }
      },
      methods: {
        pickers(h) {
          const options = () => ({
            props: {
              ...this.$props,
              value: this.modelValue,
              format: this.modelFormat,
              drumPattern: this.drumPattern
            },
            on: { input: this.onInput }
          });
          return [h(BaseDatePicker, options())];
        }
      },
      render(h) {
        if (this.dialog) {
          return this.generateDialogPicker(h);
        } else {
          const props = {
            ...this.$props,
            value: this.modelValue,
            format: this.modelFormat,
            drumPattern: this.drumPattern
          };
          const container = h(PickerContainer, { props }, [this.pickers(h)]);
          return h("div", { class: ["v-drumroll-picker"] }, [container]);
        }
      }
    };
    var TimePicker = {
      name: "TimePicker",
      mixins: [
        useBindings,
        useDialog,
        useSensitivity
      ],
      props: {
        height: { type: [String, Number], default: void 0 },
        hideButton: { type: Boolean, default: false },
        minuteInterval: { type: [String, Number], default: 1 },
        separator: { type: String, default: void 0 }
        // deprecated
      },
      computed: {
        type: () => "time"
      },
      methods: {
        onInput(value) {
          this.modelValue = datestring(value, this.modelFormat, this.type);
        },
        pickers(h) {
          const options = () => ({
            props: {
              ...this.$props,
              value: this.modelValue,
              format: this.modelFormat,
              drumPattern: this.drumPattern
            },
            on: { input: this.onInput }
          });
          return [h(BaseTimePicker, options())];
        }
      },
      render(h) {
        if (this.dialog) {
          return this.generateDialogPicker(h);
        } else {
          const props = {
            ...this.$props,
            value: this.modelValue,
            format: this.modelFormat,
            drumPattern: this.drumPattern
          };
          const container = h(PickerContainer, { props }, [this.pickers(h)]);
          return h("div", { class: ["v-drumroll-picker"] }, [container]);
        }
      }
    };
    exports.DatePicker = DatePicker;
    exports.DateTimePicker = DateTimePicker;
    exports.TimePicker = TimePicker;
    exports["default"] = DateTimePicker;
  }
});
export default require_vue_drumroll_datetime_picker();
//# sourceMappingURL=vue-drumroll-datetime-picker.js.map
